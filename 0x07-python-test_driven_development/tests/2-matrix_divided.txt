The ``2-matrix-divided`` module
===============================

Using   ``matrix_divided``
--------------------------

Importing function from module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

dividing [[1, 2, 3],[4, 5, 6]] and 3:
    >>> matrix_divided([[1, 2, 3],[4, 5, 6]], 3)
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

dividing [[1, 2, 'Lurther'],[4, 5, 6]] and 3:
    >>> matrix_divided([[1, 2, 'Lurther'],[4, 5, 6]], 3)
    Traceback (most recent call last):
            ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats

dividing [[1, 2, 3],[4, 5, 6, 7]] and 3:
    >>> matrix_divided([[1, 2, 3],[4, 5, 6, 7]], 3)
    Traceback (most recent call last):
            ...
    TypeError: Each row of the matrix must have the same size

dividing [[1, 2, 3],[4, 5, 6]] and 0:
    >>> matrix_divided([[1, 2, 3],[4, 5, 6]], 0)
    Traceback (most recent call last):
            ...
    ZeroDivisionError: division by zero

dividing [[1, 2, 3],[4, 5, 6]] and 'Mark':
    >>> matrix_divided([[1, 2, 3],[4, 5, 6]], 'Mark')
    Traceback (most recent call last):
            ...
    TypeError: div must be a number

dividing [[1, 2, 3],[4, 5, 6]] and None:
    >>> matrix_divided([[[1, 2, 3],[4, 5, 6]]], None)
    Traceback (most recent call last):
            ...
    TypeError: div must be a number

dividing [[]] and 9:
    >>> matrix_divided([[]], 9)
    [[]]

dividing [[1, 2, 3], 2] and 3:
    >>> matrix_divided([[1, 2, 3], 2], 3)
    Traceback (most recent call last):
            ...
    TypeError: matrix must be a matrix (list of lists) of integers/floats